<?php
/**
 * FeedItem
 *
 * PHP version 7.4
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Yahoo!広告 検索広告 API リファレンス / Yahoo! JAPAN Ads Search Ads API Reference
 *
 * <div lang=\"ja\">Yahoo!広告 検索広告 APIのWebサービスについて説明します。</div> <div lang=\"en\">Search Ads API Web Services supported in Yahoo! JAPAN Ads API.</div> <div><a target=\"_blank\" href=\"https://github.com/yahoojp-marketing/ads-search-api-documents/blob/master/design/v9/Route.yaml\">OpenAPI Specification</a></div> <div lang=\"ja\"><a target=\"_blank\" href=\"https://github.com/yahoojp-marketing/ads-search-api-documents/blob/master/bestpractice/ja\">Best Practice</a></div> <div lang=\"en\"><a target=\"_blank\" href=\"https://github.com/yahoojp-marketing/ads-search-api-documents/blob/master/bestpractice/en\">Best Practice</a></div>
 *
 * The version of the OpenAPI document: v9
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 6.2.1
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace OpenAPI\Client\Model;

use \ArrayAccess;
use \OpenAPI\Client\ObjectSerializer;

/**
 * FeedItem Class Doc Comment
 *
 * @category Class
 * @description &lt;div lang&#x3D;\&quot;ja\&quot;&gt;FeedItemオブジェクトは、フィードアイテム情報を格納します。&lt;/div&gt; &lt;div lang&#x3D;\&quot;en\&quot;&gt;FeedItem object contains the information of Feed Item.&lt;/div&gt;
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 * @implements \ArrayAccess<string, mixed>
 */
class FeedItem implements ModelInterface, ArrayAccess, \JsonSerializable
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'FeedItem';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'account_id' => 'int',
        'approval_status' => '\OpenAPI\Client\Model\FeedItemServiceApprovalStatus',
        'custom_parameters' => '\OpenAPI\Client\Model\FeedItemServiceCustomParameters',
        'device_preference' => '\OpenAPI\Client\Model\FeedItemServiceDevicePreference',
        'disapproval_reason_codes' => 'string[]',
        'end_date' => 'string',
        'feed_id' => 'int',
        'feed_item_attribute' => '\OpenAPI\Client\Model\FeedItemServiceAttribute[]',
        'feed_item_id' => 'int',
        'feed_item_track_id' => 'int',
        'invalided_trademarks' => 'string[]',
        'location' => '\OpenAPI\Client\Model\FeedItemServiceLocation',
        'placeholder_type' => '\OpenAPI\Client\Model\FeedItemServicePlaceholderType',
        'review_custom_parameters' => '\OpenAPI\Client\Model\FeedItemServiceCustomParameters',
        'scheduling' => '\OpenAPI\Client\Model\FeedItemServiceScheduling',
        'start_date' => 'string',
        'targeting_ad_group' => '\OpenAPI\Client\Model\FeedItemServiceTargetingAdGroup',
        'targeting_campaign' => '\OpenAPI\Client\Model\FeedItemServiceTargetingCampaign',
        'targeting_keyword' => '\OpenAPI\Client\Model\FeedItemServiceTargetingKeyword',
        'trademark_status' => '\OpenAPI\Client\Model\FeedItemServiceTrademarkStatus'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static $openAPIFormats = [
        'account_id' => 'int64',
        'approval_status' => null,
        'custom_parameters' => null,
        'device_preference' => null,
        'disapproval_reason_codes' => null,
        'end_date' => null,
        'feed_id' => 'int64',
        'feed_item_attribute' => null,
        'feed_item_id' => 'int64',
        'feed_item_track_id' => 'int64',
        'invalided_trademarks' => null,
        'location' => null,
        'placeholder_type' => null,
        'review_custom_parameters' => null,
        'scheduling' => null,
        'start_date' => null,
        'targeting_ad_group' => null,
        'targeting_campaign' => null,
        'targeting_keyword' => null,
        'trademark_status' => null
    ];

    /**
      * Array of nullable properties. Used for (de)serialization
      *
      * @var boolean[]
      */
    protected static array $openAPINullables = [
        'account_id' => true,
		'approval_status' => true,
		'custom_parameters' => true,
		'device_preference' => true,
		'disapproval_reason_codes' => true,
		'end_date' => true,
		'feed_id' => true,
		'feed_item_attribute' => true,
		'feed_item_id' => true,
		'feed_item_track_id' => true,
		'invalided_trademarks' => true,
		'location' => true,
		'placeholder_type' => true,
		'review_custom_parameters' => true,
		'scheduling' => true,
		'start_date' => true,
		'targeting_ad_group' => true,
		'targeting_campaign' => true,
		'targeting_keyword' => true,
		'trademark_status' => true
    ];

    /**
      * If a nullable field gets set to null, insert it here
      *
      * @var boolean[]
      */
    protected array $openAPINullablesSetToNull = [];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of nullable properties
     *
     * @return array
     */
    protected static function openAPINullables(): array
    {
        return self::$openAPINullables;
    }

    /**
     * Array of nullable field names deliberately set to null
     *
     * @return boolean[]
     */
    private function getOpenAPINullablesSetToNull(): array
    {
        return $this->openAPINullablesSetToNull;
    }

    /**
     * Setter - Array of nullable field names deliberately set to null
     *
     * @param boolean[] $openAPINullablesSetToNull
     */
    private function setOpenAPINullablesSetToNull(array $openAPINullablesSetToNull): void
    {
        $this->openAPINullablesSetToNull = $openAPINullablesSetToNull;
    }

    /**
     * Checks if a property is nullable
     *
     * @param string $property
     * @return bool
     */
    public static function isNullable(string $property): bool
    {
        return self::openAPINullables()[$property] ?? false;
    }

    /**
     * Checks if a nullable property is set to null.
     *
     * @param string $property
     * @return bool
     */
    public function isNullableSetToNull(string $property): bool
    {
        return in_array($property, $this->getOpenAPINullablesSetToNull(), true);
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'account_id' => 'accountId',
        'approval_status' => 'approvalStatus',
        'custom_parameters' => 'customParameters',
        'device_preference' => 'devicePreference',
        'disapproval_reason_codes' => 'disapprovalReasonCodes',
        'end_date' => 'endDate',
        'feed_id' => 'feedId',
        'feed_item_attribute' => 'feedItemAttribute',
        'feed_item_id' => 'feedItemId',
        'feed_item_track_id' => 'feedItemTrackId',
        'invalided_trademarks' => 'invalidedTrademarks',
        'location' => 'location',
        'placeholder_type' => 'placeholderType',
        'review_custom_parameters' => 'reviewCustomParameters',
        'scheduling' => 'scheduling',
        'start_date' => 'startDate',
        'targeting_ad_group' => 'targetingAdGroup',
        'targeting_campaign' => 'targetingCampaign',
        'targeting_keyword' => 'targetingKeyword',
        'trademark_status' => 'trademarkStatus'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'account_id' => 'setAccountId',
        'approval_status' => 'setApprovalStatus',
        'custom_parameters' => 'setCustomParameters',
        'device_preference' => 'setDevicePreference',
        'disapproval_reason_codes' => 'setDisapprovalReasonCodes',
        'end_date' => 'setEndDate',
        'feed_id' => 'setFeedId',
        'feed_item_attribute' => 'setFeedItemAttribute',
        'feed_item_id' => 'setFeedItemId',
        'feed_item_track_id' => 'setFeedItemTrackId',
        'invalided_trademarks' => 'setInvalidedTrademarks',
        'location' => 'setLocation',
        'placeholder_type' => 'setPlaceholderType',
        'review_custom_parameters' => 'setReviewCustomParameters',
        'scheduling' => 'setScheduling',
        'start_date' => 'setStartDate',
        'targeting_ad_group' => 'setTargetingAdGroup',
        'targeting_campaign' => 'setTargetingCampaign',
        'targeting_keyword' => 'setTargetingKeyword',
        'trademark_status' => 'setTrademarkStatus'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'account_id' => 'getAccountId',
        'approval_status' => 'getApprovalStatus',
        'custom_parameters' => 'getCustomParameters',
        'device_preference' => 'getDevicePreference',
        'disapproval_reason_codes' => 'getDisapprovalReasonCodes',
        'end_date' => 'getEndDate',
        'feed_id' => 'getFeedId',
        'feed_item_attribute' => 'getFeedItemAttribute',
        'feed_item_id' => 'getFeedItemId',
        'feed_item_track_id' => 'getFeedItemTrackId',
        'invalided_trademarks' => 'getInvalidedTrademarks',
        'location' => 'getLocation',
        'placeholder_type' => 'getPlaceholderType',
        'review_custom_parameters' => 'getReviewCustomParameters',
        'scheduling' => 'getScheduling',
        'start_date' => 'getStartDate',
        'targeting_ad_group' => 'getTargetingAdGroup',
        'targeting_campaign' => 'getTargetingCampaign',
        'targeting_keyword' => 'getTargetingKeyword',
        'trademark_status' => 'getTrademarkStatus'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }


    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->setIfExists('account_id', $data ?? [], null);
        $this->setIfExists('approval_status', $data ?? [], null);
        $this->setIfExists('custom_parameters', $data ?? [], null);
        $this->setIfExists('device_preference', $data ?? [], null);
        $this->setIfExists('disapproval_reason_codes', $data ?? [], null);
        $this->setIfExists('end_date', $data ?? [], null);
        $this->setIfExists('feed_id', $data ?? [], null);
        $this->setIfExists('feed_item_attribute', $data ?? [], null);
        $this->setIfExists('feed_item_id', $data ?? [], null);
        $this->setIfExists('feed_item_track_id', $data ?? [], null);
        $this->setIfExists('invalided_trademarks', $data ?? [], null);
        $this->setIfExists('location', $data ?? [], null);
        $this->setIfExists('placeholder_type', $data ?? [], null);
        $this->setIfExists('review_custom_parameters', $data ?? [], null);
        $this->setIfExists('scheduling', $data ?? [], null);
        $this->setIfExists('start_date', $data ?? [], null);
        $this->setIfExists('targeting_ad_group', $data ?? [], null);
        $this->setIfExists('targeting_campaign', $data ?? [], null);
        $this->setIfExists('targeting_keyword', $data ?? [], null);
        $this->setIfExists('trademark_status', $data ?? [], null);
    }

    /**
    * Sets $this->container[$variableName] to the given data or to the given default Value; if $variableName
    * is nullable and its value is set to null in the $fields array, then mark it as "set to null" in the
    * $this->openAPINullablesSetToNull array
    *
    * @param string $variableName
    * @param array  $fields
    * @param mixed  $defaultValue
    */
    private function setIfExists(string $variableName, array $fields, $defaultValue): void
    {
        if (self::isNullable($variableName) && array_key_exists($variableName, $fields) && is_null($fields[$variableName])) {
            $this->openAPINullablesSetToNull[] = $variableName;
        }

        $this->container[$variableName] = $fields[$variableName] ?? $defaultValue;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets account_id
     *
     * @return int|null
     */
    public function getAccountId()
    {
        return $this->container['account_id'];
    }

    /**
     * Sets account_id
     *
     * @param int|null $account_id <div lang=\"ja\">アカウントIDです。<br> このフィールドは、レスポンスの際に返却されますが、リクエストの際には無視されます。</div> <div lang=\"en\">Account ID.<br> Although this field will be returned in the response, it will be ignored on input.</div>
     *
     * @return self
     */
    public function setAccountId($account_id)
    {

        if (is_null($account_id)) {
            array_push($this->openAPINullablesSetToNull, 'account_id');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('account_id', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }

        $this->container['account_id'] = $account_id;

        return $this;
    }

    /**
     * Gets approval_status
     *
     * @return \OpenAPI\Client\Model\FeedItemServiceApprovalStatus|null
     */
    public function getApprovalStatus()
    {
        return $this->container['approval_status'];
    }

    /**
     * Sets approval_status
     *
     * @param \OpenAPI\Client\Model\FeedItemServiceApprovalStatus|null $approval_status approval_status
     *
     * @return self
     */
    public function setApprovalStatus($approval_status)
    {

        if (is_null($approval_status)) {
            array_push($this->openAPINullablesSetToNull, 'approval_status');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('approval_status', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }

        $this->container['approval_status'] = $approval_status;

        return $this;
    }

    /**
     * Gets custom_parameters
     *
     * @return \OpenAPI\Client\Model\FeedItemServiceCustomParameters|null
     */
    public function getCustomParameters()
    {
        return $this->container['custom_parameters'];
    }

    /**
     * Sets custom_parameters
     *
     * @param \OpenAPI\Client\Model\FeedItemServiceCustomParameters|null $custom_parameters custom_parameters
     *
     * @return self
     */
    public function setCustomParameters($custom_parameters)
    {

        if (is_null($custom_parameters)) {
            array_push($this->openAPINullablesSetToNull, 'custom_parameters');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('custom_parameters', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }

        $this->container['custom_parameters'] = $custom_parameters;

        return $this;
    }

    /**
     * Gets device_preference
     *
     * @return \OpenAPI\Client\Model\FeedItemServiceDevicePreference|null
     */
    public function getDevicePreference()
    {
        return $this->container['device_preference'];
    }

    /**
     * Sets device_preference
     *
     * @param \OpenAPI\Client\Model\FeedItemServiceDevicePreference|null $device_preference device_preference
     *
     * @return self
     */
    public function setDevicePreference($device_preference)
    {

        if (is_null($device_preference)) {
            array_push($this->openAPINullablesSetToNull, 'device_preference');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('device_preference', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }

        $this->container['device_preference'] = $device_preference;

        return $this;
    }

    /**
     * Gets disapproval_reason_codes
     *
     * @return string[]|null
     */
    public function getDisapprovalReasonCodes()
    {
        return $this->container['disapproval_reason_codes'];
    }

    /**
     * Sets disapproval_reason_codes
     *
     * @param string[]|null $disapproval_reason_codes <div lang=\"ja\">審査否認理由です。<br> このフィールドは、レスポンスの際に返却されますが、リクエストの際には無視されます。</div> <div lang=\"en\">Reject reason on editorial review.<br> Although this field will be returned in the response, it will be ignored on input.</div>
     *
     * @return self
     */
    public function setDisapprovalReasonCodes($disapproval_reason_codes)
    {

        if (is_null($disapproval_reason_codes)) {
            array_push($this->openAPINullablesSetToNull, 'disapproval_reason_codes');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('disapproval_reason_codes', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }

        $this->container['disapproval_reason_codes'] = $disapproval_reason_codes;

        return $this;
    }

    /**
     * Gets end_date
     *
     * @return string|null
     */
    public function getEndDate()
    {
        return $this->container['end_date'];
    }

    /**
     * Sets end_date
     *
     * @param string|null $end_date <div lang=\"ja\">配信終了日です。<br>※空で設定すると、既存の配信終了日は削除されます。<br> このフィールドは、ADDおよびSET時に省略可能となり、REMOVE時に無視されます。</div> <div lang=\"en\">End date of ad display.<br>∗By setting blank, existing end date of ad display will be deleted. <br>This field is optional in ADD and SET operation, and will be ignored in REMOVE operation.</div>
     *
     * @return self
     */
    public function setEndDate($end_date)
    {

        if (is_null($end_date)) {
            array_push($this->openAPINullablesSetToNull, 'end_date');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('end_date', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }

        $this->container['end_date'] = $end_date;

        return $this;
    }

    /**
     * Gets feed_id
     *
     * @return int|null
     */
    public function getFeedId()
    {
        return $this->container['feed_id'];
    }

    /**
     * Sets feed_id
     *
     * @param int|null $feed_id <div lang=\"ja\">フィードIDです。<br> このフィールドはレスポンスの際に返却されますが、リクエストの際には無視されます。<br> ※アドカスタマイザーの場合は、ADD時に必須となります。</div> <div lang=\"en\">Feed ID.<br>Although this field will be returned in the response, it will be ignored on input.<br> *For AD_CUSTOMIZER, this field is required in ADD operation.</div>
     *
     * @return self
     */
    public function setFeedId($feed_id)
    {

        if (is_null($feed_id)) {
            array_push($this->openAPINullablesSetToNull, 'feed_id');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('feed_id', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }

        $this->container['feed_id'] = $feed_id;

        return $this;
    }

    /**
     * Gets feed_item_attribute
     *
     * @return \OpenAPI\Client\Model\FeedItemServiceAttribute[]|null
     */
    public function getFeedItemAttribute()
    {
        return $this->container['feed_item_attribute'];
    }

    /**
     * Sets feed_item_attribute
     *
     * @param \OpenAPI\Client\Model\FeedItemServiceAttribute[]|null $feed_item_attribute feed_item_attribute
     *
     * @return self
     */
    public function setFeedItemAttribute($feed_item_attribute)
    {

        if (is_null($feed_item_attribute)) {
            array_push($this->openAPINullablesSetToNull, 'feed_item_attribute');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('feed_item_attribute', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }

        $this->container['feed_item_attribute'] = $feed_item_attribute;

        return $this;
    }

    /**
     * Gets feed_item_id
     *
     * @return int|null
     */
    public function getFeedItemId()
    {
        return $this->container['feed_item_id'];
    }

    /**
     * Sets feed_item_id
     *
     * @param int|null $feed_item_id <div lang=\"ja\">フィードアイテムIDです。<br> このフィールドは、SETおよびREMOVE時に必須となり、ADD時に無視されます。</div> <div lang=\"en\">Feed Item ID.<br>This field is required in SET and REMOVE operation, and will be ignored in ADD operation.</div>
     *
     * @return self
     */
    public function setFeedItemId($feed_item_id)
    {

        if (is_null($feed_item_id)) {
            array_push($this->openAPINullablesSetToNull, 'feed_item_id');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('feed_item_id', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }

        $this->container['feed_item_id'] = $feed_item_id;

        return $this;
    }

    /**
     * Gets feed_item_track_id
     *
     * @return int|null
     */
    public function getFeedItemTrackId()
    {
        return $this->container['feed_item_track_id'];
    }

    /**
     * Sets feed_item_track_id
     *
     * @param int|null $feed_item_track_id <div lang=\"ja\">トラッキング用フィードアイテムIDです。<br> このフィールドは、レスポンスの際に返却されますが、リクエストの際には無視されます。</div> <div lang=\"en\">Feed Item ID for tracking.<br> Although this field will be returned in the response, it will be ignored on input.</div>
     *
     * @return self
     */
    public function setFeedItemTrackId($feed_item_track_id)
    {

        if (is_null($feed_item_track_id)) {
            array_push($this->openAPINullablesSetToNull, 'feed_item_track_id');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('feed_item_track_id', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }

        $this->container['feed_item_track_id'] = $feed_item_track_id;

        return $this;
    }

    /**
     * Gets invalided_trademarks
     *
     * @return string[]|null
     */
    public function getInvalidedTrademarks()
    {
        return $this->container['invalided_trademarks'];
    }

    /**
     * Sets invalided_trademarks
     *
     * @param string[]|null $invalided_trademarks <div lang=\"ja\">制限された商標です。<br> このフィールドは、レスポンスの際に返却されますが、リクエストの際には無視されます。 </div> <div lang=\"en\">Invalided trademarks.<br> Although this field will be returned in the response, it will be ignored on input.</div>
     *
     * @return self
     */
    public function setInvalidedTrademarks($invalided_trademarks)
    {

        if (is_null($invalided_trademarks)) {
            array_push($this->openAPINullablesSetToNull, 'invalided_trademarks');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('invalided_trademarks', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }

        $this->container['invalided_trademarks'] = $invalided_trademarks;

        return $this;
    }

    /**
     * Gets location
     *
     * @return \OpenAPI\Client\Model\FeedItemServiceLocation|null
     */
    public function getLocation()
    {
        return $this->container['location'];
    }

    /**
     * Sets location
     *
     * @param \OpenAPI\Client\Model\FeedItemServiceLocation|null $location location
     *
     * @return self
     */
    public function setLocation($location)
    {

        if (is_null($location)) {
            array_push($this->openAPINullablesSetToNull, 'location');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('location', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }

        $this->container['location'] = $location;

        return $this;
    }

    /**
     * Gets placeholder_type
     *
     * @return \OpenAPI\Client\Model\FeedItemServicePlaceholderType|null
     */
    public function getPlaceholderType()
    {
        return $this->container['placeholder_type'];
    }

    /**
     * Sets placeholder_type
     *
     * @param \OpenAPI\Client\Model\FeedItemServicePlaceholderType|null $placeholder_type placeholder_type
     *
     * @return self
     */
    public function setPlaceholderType($placeholder_type)
    {

        if (is_null($placeholder_type)) {
            array_push($this->openAPINullablesSetToNull, 'placeholder_type');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('placeholder_type', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }

        $this->container['placeholder_type'] = $placeholder_type;

        return $this;
    }

    /**
     * Gets review_custom_parameters
     *
     * @return \OpenAPI\Client\Model\FeedItemServiceCustomParameters|null
     */
    public function getReviewCustomParameters()
    {
        return $this->container['review_custom_parameters'];
    }

    /**
     * Sets review_custom_parameters
     *
     * @param \OpenAPI\Client\Model\FeedItemServiceCustomParameters|null $review_custom_parameters review_custom_parameters
     *
     * @return self
     */
    public function setReviewCustomParameters($review_custom_parameters)
    {

        if (is_null($review_custom_parameters)) {
            array_push($this->openAPINullablesSetToNull, 'review_custom_parameters');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('review_custom_parameters', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }

        $this->container['review_custom_parameters'] = $review_custom_parameters;

        return $this;
    }

    /**
     * Gets scheduling
     *
     * @return \OpenAPI\Client\Model\FeedItemServiceScheduling|null
     */
    public function getScheduling()
    {
        return $this->container['scheduling'];
    }

    /**
     * Sets scheduling
     *
     * @param \OpenAPI\Client\Model\FeedItemServiceScheduling|null $scheduling scheduling
     *
     * @return self
     */
    public function setScheduling($scheduling)
    {

        if (is_null($scheduling)) {
            array_push($this->openAPINullablesSetToNull, 'scheduling');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('scheduling', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }

        $this->container['scheduling'] = $scheduling;

        return $this;
    }

    /**
     * Gets start_date
     *
     * @return string|null
     */
    public function getStartDate()
    {
        return $this->container['start_date'];
    }

    /**
     * Sets start_date
     *
     * @param string|null $start_date <div lang=\"ja\">配信開始日です。<br> ※空で設定すると、既存の配信開始日は削除されます。<br> このフィールドは、ADDおよびSET時に省略可能となり、REMOVE時に無視されます。</div> <div lang=\"en\">Start date of ad display<br> ∗On setting blank, existing start date of ad display will be deleted.<br> This field is optional in ADD and SET operation, and will be ignored in REMOVE operation.</div>
     *
     * @return self
     */
    public function setStartDate($start_date)
    {

        if (is_null($start_date)) {
            array_push($this->openAPINullablesSetToNull, 'start_date');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('start_date', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }

        $this->container['start_date'] = $start_date;

        return $this;
    }

    /**
     * Gets targeting_ad_group
     *
     * @return \OpenAPI\Client\Model\FeedItemServiceTargetingAdGroup|null
     */
    public function getTargetingAdGroup()
    {
        return $this->container['targeting_ad_group'];
    }

    /**
     * Sets targeting_ad_group
     *
     * @param \OpenAPI\Client\Model\FeedItemServiceTargetingAdGroup|null $targeting_ad_group targeting_ad_group
     *
     * @return self
     */
    public function setTargetingAdGroup($targeting_ad_group)
    {

        if (is_null($targeting_ad_group)) {
            array_push($this->openAPINullablesSetToNull, 'targeting_ad_group');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('targeting_ad_group', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }

        $this->container['targeting_ad_group'] = $targeting_ad_group;

        return $this;
    }

    /**
     * Gets targeting_campaign
     *
     * @return \OpenAPI\Client\Model\FeedItemServiceTargetingCampaign|null
     */
    public function getTargetingCampaign()
    {
        return $this->container['targeting_campaign'];
    }

    /**
     * Sets targeting_campaign
     *
     * @param \OpenAPI\Client\Model\FeedItemServiceTargetingCampaign|null $targeting_campaign targeting_campaign
     *
     * @return self
     */
    public function setTargetingCampaign($targeting_campaign)
    {

        if (is_null($targeting_campaign)) {
            array_push($this->openAPINullablesSetToNull, 'targeting_campaign');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('targeting_campaign', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }

        $this->container['targeting_campaign'] = $targeting_campaign;

        return $this;
    }

    /**
     * Gets targeting_keyword
     *
     * @return \OpenAPI\Client\Model\FeedItemServiceTargetingKeyword|null
     */
    public function getTargetingKeyword()
    {
        return $this->container['targeting_keyword'];
    }

    /**
     * Sets targeting_keyword
     *
     * @param \OpenAPI\Client\Model\FeedItemServiceTargetingKeyword|null $targeting_keyword targeting_keyword
     *
     * @return self
     */
    public function setTargetingKeyword($targeting_keyword)
    {

        if (is_null($targeting_keyword)) {
            array_push($this->openAPINullablesSetToNull, 'targeting_keyword');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('targeting_keyword', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }

        $this->container['targeting_keyword'] = $targeting_keyword;

        return $this;
    }

    /**
     * Gets trademark_status
     *
     * @return \OpenAPI\Client\Model\FeedItemServiceTrademarkStatus|null
     */
    public function getTrademarkStatus()
    {
        return $this->container['trademark_status'];
    }

    /**
     * Sets trademark_status
     *
     * @param \OpenAPI\Client\Model\FeedItemServiceTrademarkStatus|null $trademark_status trademark_status
     *
     * @return self
     */
    public function setTrademarkStatus($trademark_status)
    {

        if (is_null($trademark_status)) {
            array_push($this->openAPINullablesSetToNull, 'trademark_status');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('trademark_status', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }

        $this->container['trademark_status'] = $trademark_status;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset): bool
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed|null
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return $this->container[$offset] ?? null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int|null $offset Offset
     * @param mixed    $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value): void
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset): void
    {
        unset($this->container[$offset]);
    }

    /**
     * Serializes the object to a value that can be serialized natively by json_encode().
     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
     *
     * @return mixed Returns data which can be serialized by json_encode(), which is a value
     * of any type other than a resource.
     */
    #[\ReturnTypeWillChange]
    public function jsonSerialize()
    {
       return ObjectSerializer::sanitizeForSerialization($this);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


