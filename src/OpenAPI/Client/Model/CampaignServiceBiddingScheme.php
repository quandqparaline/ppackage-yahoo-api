<?php
/**
 * CampaignServiceBiddingScheme
 *
 * PHP version 7.4
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Yahoo!広告 検索広告 API リファレンス / Yahoo! JAPAN Ads Search Ads API Reference
 *
 * <div lang=\"ja\">Yahoo!広告 検索広告 APIのWebサービスについて説明します。</div> <div lang=\"en\">Search Ads API Web Services supported in Yahoo! JAPAN Ads API.</div> <div><a target=\"_blank\" href=\"https://github.com/yahoojp-marketing/ads-search-api-documents/blob/master/design/v9/Route.yaml\">OpenAPI Specification</a></div> <div lang=\"ja\"><a target=\"_blank\" href=\"https://github.com/yahoojp-marketing/ads-search-api-documents/blob/master/bestpractice/ja\">Best Practice</a></div> <div lang=\"en\"><a target=\"_blank\" href=\"https://github.com/yahoojp-marketing/ads-search-api-documents/blob/master/bestpractice/en\">Best Practice</a></div>
 *
 * The version of the OpenAPI document: v9
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 6.2.1
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace OpenAPI\Client\Model;

use \ArrayAccess;
use \OpenAPI\Client\ObjectSerializer;

/**
 * CampaignServiceBiddingScheme Class Doc Comment
 *
 * @category Class
 * @description &lt;div lang&#x3D;\&quot;ja\&quot;&gt;CampaignServiceBiddingSchemeオブジェクトは、自動入札設定の詳細情報を表します。 （BiddingStrategyService以外用のオブジェクトです。）&lt;br&gt; ADD時、標準入札設定の場合、このフィールドは必須となり、ポートフォリオ入札設定の場合、設定不可となります。また、portfolioBiddingIdと同時に設定することはできません。&lt;/div&gt; &lt;div lang&#x3D;\&quot;en\&quot;&gt;CampaignServiceBiddingScheme object displays the details of Auto Bidding setting.&lt;br&gt; This field is required when Standard bidding is setting, and cannot be specified when Portfolio bidding is setting in ADD operation. It cannot be specified at the same times as portfolioBiddingId.&lt;/div&gt;
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 * @implements \ArrayAccess<string, mixed>
 */
class CampaignServiceBiddingScheme implements ModelInterface, ArrayAccess, \JsonSerializable
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'CampaignServiceBiddingScheme';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'bidding_strategy_type' => '\OpenAPI\Client\Model\CampaignServiceBiddingStrategyType',
        'cpc_bidding_scheme' => '\OpenAPI\Client\Model\CampaignServiceCpcBiddingScheme',
        'target_cpa_bidding_scheme' => '\OpenAPI\Client\Model\CampaignServiceTargetCpaBiddingScheme',
        'target_roas_bidding_scheme' => '\OpenAPI\Client\Model\CampaignServiceTargetRoasBiddingScheme',
        'maximize_clicks_bidding_scheme' => '\OpenAPI\Client\Model\CampaignServiceMaximizeClicksBiddingScheme',
        'target_impression_share_scheme' => '\OpenAPI\Client\Model\CampaignServiceTargetImpressionShareScheme',
        'maximize_conversions_bidding_scheme' => '\OpenAPI\Client\Model\CampaignServiceMaximizeConversionsBiddingScheme',
        'maximize_conversion_value_bidding_scheme' => '\OpenAPI\Client\Model\CampaignServiceMaximizeConversionValueBiddingScheme'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static $openAPIFormats = [
        'bidding_strategy_type' => null,
        'cpc_bidding_scheme' => null,
        'target_cpa_bidding_scheme' => null,
        'target_roas_bidding_scheme' => null,
        'maximize_clicks_bidding_scheme' => null,
        'target_impression_share_scheme' => null,
        'maximize_conversions_bidding_scheme' => null,
        'maximize_conversion_value_bidding_scheme' => null
    ];

    /**
      * Array of nullable properties. Used for (de)serialization
      *
      * @var boolean[]
      */
    protected static array $openAPINullables = [
        'bidding_strategy_type' => true,
		'cpc_bidding_scheme' => true,
		'target_cpa_bidding_scheme' => true,
		'target_roas_bidding_scheme' => true,
		'maximize_clicks_bidding_scheme' => true,
		'target_impression_share_scheme' => true,
		'maximize_conversions_bidding_scheme' => true,
		'maximize_conversion_value_bidding_scheme' => true
    ];

    /**
      * If a nullable field gets set to null, insert it here
      *
      * @var boolean[]
      */
    protected array $openAPINullablesSetToNull = [];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of nullable properties
     *
     * @return array
     */
    protected static function openAPINullables(): array
    {
        return self::$openAPINullables;
    }

    /**
     * Array of nullable field names deliberately set to null
     *
     * @return boolean[]
     */
    private function getOpenAPINullablesSetToNull(): array
    {
        return $this->openAPINullablesSetToNull;
    }

    /**
     * Setter - Array of nullable field names deliberately set to null
     *
     * @param boolean[] $openAPINullablesSetToNull
     */
    private function setOpenAPINullablesSetToNull(array $openAPINullablesSetToNull): void
    {
        $this->openAPINullablesSetToNull = $openAPINullablesSetToNull;
    }

    /**
     * Checks if a property is nullable
     *
     * @param string $property
     * @return bool
     */
    public static function isNullable(string $property): bool
    {
        return self::openAPINullables()[$property] ?? false;
    }

    /**
     * Checks if a nullable property is set to null.
     *
     * @param string $property
     * @return bool
     */
    public function isNullableSetToNull(string $property): bool
    {
        return in_array($property, $this->getOpenAPINullablesSetToNull(), true);
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'bidding_strategy_type' => 'biddingStrategyType',
        'cpc_bidding_scheme' => 'cpcBiddingScheme',
        'target_cpa_bidding_scheme' => 'targetCpaBiddingScheme',
        'target_roas_bidding_scheme' => 'targetRoasBiddingScheme',
        'maximize_clicks_bidding_scheme' => 'maximizeClicksBiddingScheme',
        'target_impression_share_scheme' => 'targetImpressionShareScheme',
        'maximize_conversions_bidding_scheme' => 'maximizeConversionsBiddingScheme',
        'maximize_conversion_value_bidding_scheme' => 'maximizeConversionValueBiddingScheme'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'bidding_strategy_type' => 'setBiddingStrategyType',
        'cpc_bidding_scheme' => 'setCpcBiddingScheme',
        'target_cpa_bidding_scheme' => 'setTargetCpaBiddingScheme',
        'target_roas_bidding_scheme' => 'setTargetRoasBiddingScheme',
        'maximize_clicks_bidding_scheme' => 'setMaximizeClicksBiddingScheme',
        'target_impression_share_scheme' => 'setTargetImpressionShareScheme',
        'maximize_conversions_bidding_scheme' => 'setMaximizeConversionsBiddingScheme',
        'maximize_conversion_value_bidding_scheme' => 'setMaximizeConversionValueBiddingScheme'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'bidding_strategy_type' => 'getBiddingStrategyType',
        'cpc_bidding_scheme' => 'getCpcBiddingScheme',
        'target_cpa_bidding_scheme' => 'getTargetCpaBiddingScheme',
        'target_roas_bidding_scheme' => 'getTargetRoasBiddingScheme',
        'maximize_clicks_bidding_scheme' => 'getMaximizeClicksBiddingScheme',
        'target_impression_share_scheme' => 'getTargetImpressionShareScheme',
        'maximize_conversions_bidding_scheme' => 'getMaximizeConversionsBiddingScheme',
        'maximize_conversion_value_bidding_scheme' => 'getMaximizeConversionValueBiddingScheme'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }


    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->setIfExists('bidding_strategy_type', $data ?? [], null);
        $this->setIfExists('cpc_bidding_scheme', $data ?? [], null);
        $this->setIfExists('target_cpa_bidding_scheme', $data ?? [], null);
        $this->setIfExists('target_roas_bidding_scheme', $data ?? [], null);
        $this->setIfExists('maximize_clicks_bidding_scheme', $data ?? [], null);
        $this->setIfExists('target_impression_share_scheme', $data ?? [], null);
        $this->setIfExists('maximize_conversions_bidding_scheme', $data ?? [], null);
        $this->setIfExists('maximize_conversion_value_bidding_scheme', $data ?? [], null);
    }

    /**
    * Sets $this->container[$variableName] to the given data or to the given default Value; if $variableName
    * is nullable and its value is set to null in the $fields array, then mark it as "set to null" in the
    * $this->openAPINullablesSetToNull array
    *
    * @param string $variableName
    * @param array  $fields
    * @param mixed  $defaultValue
    */
    private function setIfExists(string $variableName, array $fields, $defaultValue): void
    {
        if (self::isNullable($variableName) && array_key_exists($variableName, $fields) && is_null($fields[$variableName])) {
            $this->openAPINullablesSetToNull[] = $variableName;
        }

        $this->container[$variableName] = $fields[$variableName] ?? $defaultValue;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets bidding_strategy_type
     *
     * @return \OpenAPI\Client\Model\CampaignServiceBiddingStrategyType|null
     */
    public function getBiddingStrategyType()
    {
        return $this->container['bidding_strategy_type'];
    }

    /**
     * Sets bidding_strategy_type
     *
     * @param \OpenAPI\Client\Model\CampaignServiceBiddingStrategyType|null $bidding_strategy_type bidding_strategy_type
     *
     * @return self
     */
    public function setBiddingStrategyType($bidding_strategy_type)
    {

        if (is_null($bidding_strategy_type)) {
            array_push($this->openAPINullablesSetToNull, 'bidding_strategy_type');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('bidding_strategy_type', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }

        $this->container['bidding_strategy_type'] = $bidding_strategy_type;

        return $this;
    }

    /**
     * Gets cpc_bidding_scheme
     *
     * @return \OpenAPI\Client\Model\CampaignServiceCpcBiddingScheme|null
     */
    public function getCpcBiddingScheme()
    {
        return $this->container['cpc_bidding_scheme'];
    }

    /**
     * Sets cpc_bidding_scheme
     *
     * @param \OpenAPI\Client\Model\CampaignServiceCpcBiddingScheme|null $cpc_bidding_scheme cpc_bidding_scheme
     *
     * @return self
     */
    public function setCpcBiddingScheme($cpc_bidding_scheme)
    {

        if (is_null($cpc_bidding_scheme)) {
            array_push($this->openAPINullablesSetToNull, 'cpc_bidding_scheme');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('cpc_bidding_scheme', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }

        $this->container['cpc_bidding_scheme'] = $cpc_bidding_scheme;

        return $this;
    }

    /**
     * Gets target_cpa_bidding_scheme
     *
     * @return \OpenAPI\Client\Model\CampaignServiceTargetCpaBiddingScheme|null
     */
    public function getTargetCpaBiddingScheme()
    {
        return $this->container['target_cpa_bidding_scheme'];
    }

    /**
     * Sets target_cpa_bidding_scheme
     *
     * @param \OpenAPI\Client\Model\CampaignServiceTargetCpaBiddingScheme|null $target_cpa_bidding_scheme target_cpa_bidding_scheme
     *
     * @return self
     */
    public function setTargetCpaBiddingScheme($target_cpa_bidding_scheme)
    {

        if (is_null($target_cpa_bidding_scheme)) {
            array_push($this->openAPINullablesSetToNull, 'target_cpa_bidding_scheme');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('target_cpa_bidding_scheme', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }

        $this->container['target_cpa_bidding_scheme'] = $target_cpa_bidding_scheme;

        return $this;
    }

    /**
     * Gets target_roas_bidding_scheme
     *
     * @return \OpenAPI\Client\Model\CampaignServiceTargetRoasBiddingScheme|null
     */
    public function getTargetRoasBiddingScheme()
    {
        return $this->container['target_roas_bidding_scheme'];
    }

    /**
     * Sets target_roas_bidding_scheme
     *
     * @param \OpenAPI\Client\Model\CampaignServiceTargetRoasBiddingScheme|null $target_roas_bidding_scheme target_roas_bidding_scheme
     *
     * @return self
     */
    public function setTargetRoasBiddingScheme($target_roas_bidding_scheme)
    {

        if (is_null($target_roas_bidding_scheme)) {
            array_push($this->openAPINullablesSetToNull, 'target_roas_bidding_scheme');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('target_roas_bidding_scheme', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }

        $this->container['target_roas_bidding_scheme'] = $target_roas_bidding_scheme;

        return $this;
    }

    /**
     * Gets maximize_clicks_bidding_scheme
     *
     * @return \OpenAPI\Client\Model\CampaignServiceMaximizeClicksBiddingScheme|null
     */
    public function getMaximizeClicksBiddingScheme()
    {
        return $this->container['maximize_clicks_bidding_scheme'];
    }

    /**
     * Sets maximize_clicks_bidding_scheme
     *
     * @param \OpenAPI\Client\Model\CampaignServiceMaximizeClicksBiddingScheme|null $maximize_clicks_bidding_scheme maximize_clicks_bidding_scheme
     *
     * @return self
     */
    public function setMaximizeClicksBiddingScheme($maximize_clicks_bidding_scheme)
    {

        if (is_null($maximize_clicks_bidding_scheme)) {
            array_push($this->openAPINullablesSetToNull, 'maximize_clicks_bidding_scheme');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('maximize_clicks_bidding_scheme', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }

        $this->container['maximize_clicks_bidding_scheme'] = $maximize_clicks_bidding_scheme;

        return $this;
    }

    /**
     * Gets target_impression_share_scheme
     *
     * @return \OpenAPI\Client\Model\CampaignServiceTargetImpressionShareScheme|null
     */
    public function getTargetImpressionShareScheme()
    {
        return $this->container['target_impression_share_scheme'];
    }

    /**
     * Sets target_impression_share_scheme
     *
     * @param \OpenAPI\Client\Model\CampaignServiceTargetImpressionShareScheme|null $target_impression_share_scheme target_impression_share_scheme
     *
     * @return self
     */
    public function setTargetImpressionShareScheme($target_impression_share_scheme)
    {

        if (is_null($target_impression_share_scheme)) {
            array_push($this->openAPINullablesSetToNull, 'target_impression_share_scheme');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('target_impression_share_scheme', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }

        $this->container['target_impression_share_scheme'] = $target_impression_share_scheme;

        return $this;
    }

    /**
     * Gets maximize_conversions_bidding_scheme
     *
     * @return \OpenAPI\Client\Model\CampaignServiceMaximizeConversionsBiddingScheme|null
     */
    public function getMaximizeConversionsBiddingScheme()
    {
        return $this->container['maximize_conversions_bidding_scheme'];
    }

    /**
     * Sets maximize_conversions_bidding_scheme
     *
     * @param \OpenAPI\Client\Model\CampaignServiceMaximizeConversionsBiddingScheme|null $maximize_conversions_bidding_scheme maximize_conversions_bidding_scheme
     *
     * @return self
     */
    public function setMaximizeConversionsBiddingScheme($maximize_conversions_bidding_scheme)
    {

        if (is_null($maximize_conversions_bidding_scheme)) {
            array_push($this->openAPINullablesSetToNull, 'maximize_conversions_bidding_scheme');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('maximize_conversions_bidding_scheme', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }

        $this->container['maximize_conversions_bidding_scheme'] = $maximize_conversions_bidding_scheme;

        return $this;
    }

    /**
     * Gets maximize_conversion_value_bidding_scheme
     *
     * @return \OpenAPI\Client\Model\CampaignServiceMaximizeConversionValueBiddingScheme|null
     */
    public function getMaximizeConversionValueBiddingScheme()
    {
        return $this->container['maximize_conversion_value_bidding_scheme'];
    }

    /**
     * Sets maximize_conversion_value_bidding_scheme
     *
     * @param \OpenAPI\Client\Model\CampaignServiceMaximizeConversionValueBiddingScheme|null $maximize_conversion_value_bidding_scheme maximize_conversion_value_bidding_scheme
     *
     * @return self
     */
    public function setMaximizeConversionValueBiddingScheme($maximize_conversion_value_bidding_scheme)
    {

        if (is_null($maximize_conversion_value_bidding_scheme)) {
            array_push($this->openAPINullablesSetToNull, 'maximize_conversion_value_bidding_scheme');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('maximize_conversion_value_bidding_scheme', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }

        $this->container['maximize_conversion_value_bidding_scheme'] = $maximize_conversion_value_bidding_scheme;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset): bool
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed|null
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return $this->container[$offset] ?? null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int|null $offset Offset
     * @param mixed    $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value): void
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset): void
    {
        unset($this->container[$offset]);
    }

    /**
     * Serializes the object to a value that can be serialized natively by json_encode().
     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
     *
     * @return mixed Returns data which can be serialized by json_encode(), which is a value
     * of any type other than a resource.
     */
    #[\ReturnTypeWillChange]
    public function jsonSerialize()
    {
       return ObjectSerializer::sanitizeForSerialization($this);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


