<?php
/**
 * AuditLogServiceEventSelector
 *
 * PHP version 7.4
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Yahoo!広告 検索広告 API リファレンス / Yahoo! JAPAN Ads Search Ads API Reference
 *
 * <div lang=\"ja\">Yahoo!広告 検索広告 APIのWebサービスについて説明します。</div> <div lang=\"en\">Search Ads API Web Services supported in Yahoo! JAPAN Ads API.</div> <div><a target=\"_blank\" href=\"https://github.com/yahoojp-marketing/ads-search-api-documents/blob/master/design/v9/Route.yaml\">OpenAPI Specification</a></div> <div lang=\"ja\"><a target=\"_blank\" href=\"https://github.com/yahoojp-marketing/ads-search-api-documents/blob/master/bestpractice/ja\">Best Practice</a></div> <div lang=\"en\"><a target=\"_blank\" href=\"https://github.com/yahoojp-marketing/ads-search-api-documents/blob/master/bestpractice/en\">Best Practice</a></div>
 *
 * The version of the OpenAPI document: v9
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 6.2.1
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace OpenAPI\Client\Model;

use \ArrayAccess;
use \OpenAPI\Client\ObjectSerializer;

/**
 * AuditLogServiceEventSelector Class Doc Comment
 *
 * @category Class
 * @description &lt;div lang&#x3D;\&quot;ja\&quot;&gt;AuditLogServiceEventSelectorオブジェクトは、操作履歴の取得対象を設定します。&lt;br&gt; このフィールドは、必須です。&lt;/div&gt; &lt;div lang&#x3D;\&quot;en\&quot;&gt;AuditLogServiceEventSelector object enables the target setting of acquiring operation history.&lt;br&gt; This field is required.&lt;/div&gt;
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 * @implements \ArrayAccess<string, mixed>
 */
class AuditLogServiceEventSelector implements ModelInterface, ArrayAccess, \JsonSerializable
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'AuditLogServiceEventSelector';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'entity_type' => 'string',
        'event_types' => '\OpenAPI\Client\Model\AuditLogServiceEventTypes[]'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static $openAPIFormats = [
        'entity_type' => null,
        'event_types' => null
    ];

    /**
      * Array of nullable properties. Used for (de)serialization
      *
      * @var boolean[]
      */
    protected static array $openAPINullables = [
        'entity_type' => true,
		'event_types' => true
    ];

    /**
      * If a nullable field gets set to null, insert it here
      *
      * @var boolean[]
      */
    protected array $openAPINullablesSetToNull = [];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of nullable properties
     *
     * @return array
     */
    protected static function openAPINullables(): array
    {
        return self::$openAPINullables;
    }

    /**
     * Array of nullable field names deliberately set to null
     *
     * @return boolean[]
     */
    private function getOpenAPINullablesSetToNull(): array
    {
        return $this->openAPINullablesSetToNull;
    }

    /**
     * Setter - Array of nullable field names deliberately set to null
     *
     * @param boolean[] $openAPINullablesSetToNull
     */
    private function setOpenAPINullablesSetToNull(array $openAPINullablesSetToNull): void
    {
        $this->openAPINullablesSetToNull = $openAPINullablesSetToNull;
    }

    /**
     * Checks if a property is nullable
     *
     * @param string $property
     * @return bool
     */
    public static function isNullable(string $property): bool
    {
        return self::openAPINullables()[$property] ?? false;
    }

    /**
     * Checks if a nullable property is set to null.
     *
     * @param string $property
     * @return bool
     */
    public function isNullableSetToNull(string $property): bool
    {
        return in_array($property, $this->getOpenAPINullablesSetToNull(), true);
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'entity_type' => 'entityType',
        'event_types' => 'eventTypes'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'entity_type' => 'setEntityType',
        'event_types' => 'setEventTypes'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'entity_type' => 'getEntityType',
        'event_types' => 'getEventTypes'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }


    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->setIfExists('entity_type', $data ?? [], null);
        $this->setIfExists('event_types', $data ?? [], null);
    }

    /**
    * Sets $this->container[$variableName] to the given data or to the given default Value; if $variableName
    * is nullable and its value is set to null in the $fields array, then mark it as "set to null" in the
    * $this->openAPINullablesSetToNull array
    *
    * @param string $variableName
    * @param array  $fields
    * @param mixed  $defaultValue
    */
    private function setIfExists(string $variableName, array $fields, $defaultValue): void
    {
        if (self::isNullable($variableName) && array_key_exists($variableName, $fields) && is_null($fields[$variableName])) {
            $this->openAPINullablesSetToNull[] = $variableName;
        }

        $this->container[$variableName] = $fields[$variableName] ?? $defaultValue;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets entity_type
     *
     * @return string|null
     */
    public function getEntityType()
    {
        return $this->container['entity_type'];
    }

    /**
     * Sets entity_type
     *
     * @param string|null $entity_type <div lang=\"ja\">AuditLogServiceEntityTypeオブジェクトは、操作履歴に出力するエンティティの種類を表します。</div> <div lang=\"en\">AuditLogServiceEntityType object describes the type of entities to be output on the data of operation history.</div> <dl class=term>   <dt class=\"term__item\">CAMPAIGN</dt>   <dd class=\"term__desc\"><span lang=\"ja\">キャンペーンです。</span><span lang=\"en\">Campaign.</span></dd>   <dt class=\"term__item\">NEGATIVE_CAMPAIGN_CRITERION</dt>   <dd class=\"term__desc\"><span lang=\"ja\">対象外キーワードです（キャンペーン）。</span><span lang=\"en\">Negative keywords (for campaign)</span></dd>   <dt class=\"term__item\">CAMPAIGN_CRITERION</dt>   <dd class=\"term__desc\"><span lang=\"ja\">キャンペーンのターゲティング設定です。</span><span lang=\"en\">Targeting setting on campaign.</span></dd>   <dt class=\"term__item\">AD_GROUP</dt>   <dd class=\"term__desc\"><span lang=\"ja\">広告グループです。</span><span lang=\"en\">Ad group.</span></dd>   <dt class=\"term__item\">AD_GROUP_BID_MULTIPLIER</dt>   <dd class=\"term__desc\"><span lang=\"ja\">広告グループ入札価格調整率です。</span><span lang=\"en\">Bid adjustment for ad group.</span></dd>   <dt class=\"term__item\">BIDDABLE_AD_GROUP_CRITERION</dt>   <dd class=\"term__desc\"><span lang=\"ja\">入札キーワードです。</span><span lang=\"en\">Bidding keyword.</span></dd>   <dt class=\"term__item\">NEGATIVE_AD_GROUP_CRITERION</dt>   <dd class=\"term__desc\"><span lang=\"ja\">対象外キーワードです（広告グループ）。</span><span lang=\"en\">Negative keywords (for ad group)</span></dd>   <dt class=\"term__item\">AD</dt>   <dd class=\"term__desc\"><span lang=\"ja\">広告です。</span><span lang=\"en\">Ad.</span></dd>   <dt class=\"term__item\">FEED</dt>   <dd class=\"term__desc\"><span lang=\"ja\">Feedフォルダーです。</span><span lang=\"en\">Feed folder.</span></dd>   <dt class=\"term__item\">FEED_ITEM</dt>   <dd class=\"term__desc\"><span lang=\"ja\">広告表示オプションです。</span><span lang=\"en\">Ad display options.</span></dd>   <dt class=\"term__item\">CAMPAIGN_FEED</dt>   <dd class=\"term__desc\"><span lang=\"ja\">広告表示オプションです（キャンペーン）。</span><span lang=\"en\">Ad display options for campaign.</span></dd>   <dt class=\"term__item\">AD_GROUP_FEED</dt>   <dd class=\"term__desc\"><span lang=\"ja\">広告表示オプションです（広告グループ）。</span><span lang=\"en\">Ad display options for ad group.</span></dd>   <dt class=\"term__item\">SS_IO</dt>   <dd class=\"term__desc\"><span lang=\"ja\">アカウントです。</span><span lang=\"en\">Account.</span></dd>   <dt class=\"term__item\">SS_CONVERSION</dt>   <dd class=\"term__desc\"><span lang=\"ja\">コンバージョントラッカー（コンバージョン測定）です。</span><span lang=\"en\">Conversion tracker for conversion tracking.</span></dd>   <dt class=\"term__item\">BIDDING_STRATEGY</dt>   <dd class=\"term__desc\"><span lang=\"ja\">自動入札設定です。</span><span lang=\"en\">Auto bidding setting.</span></dd>   <dt class=\"term__item\">NEGATIVE_CAMPAIGN_USER_LIST</dt>   <dd class=\"term__desc\"><span lang=\"ja\">対象外ターゲットリストです（キャンペーン）。</span><span lang=\"en\">Exclude target list for campaign.</span></dd>   <dt class=\"term__item\">NEGATIVE_AD_GROUP_USER_LIST</dt>   <dd class=\"term__desc\"><span lang=\"ja\">対象外ターゲットリストです（広告グループ）。</span><span lang=\"en\">Exclude target list for ad group.</span></dd>   <dt class=\"term__item\">AD_GROUP_USER_LIST</dt>   <dd class=\"term__desc\"><span lang=\"ja\">ターゲットリストです（広告グループ）。</span><span lang=\"en\">Target list for ad group.</span></dd>   <dt class=\"term__item\">TARGET_LIST</dt>   <dd class=\"term__desc\"><span lang=\"ja\">サイトリターゲテイングのターゲットリストです。</span><span lang=\"en\">Target list of Site Retargeting.</span></dd>   <dt class=\"term__item\">SHARED_SET</dt>   <dd class=\"term__desc\"><span lang=\"ja\">共有リストです。</span><span lang=\"en\">Shared list.</span></dd>   <dt class=\"term__item\">SHARED_CRITERION</dt>   <dd class=\"term__desc\"><span lang=\"ja\">共有キーワードです。</span><span lang=\"en\">Shared keywords.</span></dd>   <dt class=\"term__item\">CAMPAIGN_SHARED_SET</dt>   <dd class=\"term__desc\"><span lang=\"ja\">キャンペーン共有リストです。</span><span lang=\"en\">Shared list for campaign.</span></dd>   <dt class=\"term__item\">AD_CUSTOMIZER</dt>   <dd class=\"term__desc\"><span lang=\"ja\">アドカスタマイザーです。</span><span lang=\"en\">Ad customizer.</span></dd>   <dt class=\"term__item\">EXCLUDE_AD_CUSTOMIZER</dt>   <dd class=\"term__desc\"><span lang=\"ja\">アドカスタマイザーを除くすべての履歴です。</span><span lang=\"en\">All operation history excepting ad customizer.</span></dd>   <dt class=\"term__item\">ASSET</dt>   <dd class=\"term__desc\"><span lang=\"ja\">アセット（広告表示オプション）です。</span><span lang=\"en\">Assets（Ad display option）.</span></dd>   <dt class=\"term__item\">CAMPAIGN_ASSET</dt>   <dd class=\"term__desc\"><span lang=\"ja\">キャンペーンとアセット間の設定情報です。</span><span lang=\"en\">Configuration information between campaign and assets.</span></dd>   <dt class=\"term__item\">AD_GROUP_ASSET</dt>   <dd class=\"term__desc\"><span lang=\"ja\">広告グループとアセット間の設定情報です。</span><span lang=\"en\">Configuration information between ad group and assets.</span></dd>   <dt class=\"term__item\">ACCOUNT_CUSTOMIZER</dt>   <dd class=\"term__desc\"><span lang=\"ja\">アカウントとカスタマイザー属性間の設定情報です。</span><span lang=\"en\">Configuration information between account and customizer attributes.</span></dd>   <dt class=\"term__item\">CAMPAIGN_CUSTOMIZER</dt>   <dd class=\"term__desc\"><span lang=\"ja\">キャンペーンとカスタマイザー属性間の設定情報です。</span><span lang=\"en\">Configuration information between campaign and customizer attributes.</span></dd>   <dt class=\"term__item\">AD_GROUP_CUSTOMIZER</dt>   <dd class=\"term__desc\"><span lang=\"ja\">広告グループとカスタマイザー属性間の設定情報です。</span><span lang=\"en\">Configuration information between ad group and customizer attributes.</span></dd>   <dt class=\"term__item\">AD_GROUP_CRITERION_CUSTOMIZER</dt>   <dd class=\"term__desc\"><span lang=\"ja\">キーワードとカスタマイザー属性間の設定情報です。</span><span lang=\"en\">Configuration information between keyword and customizer attributes.</span></dd>   <dt class=\"term__item\">CUSTOMIZER_ATTRIBUTE</dt>   <dd class=\"term__desc\"><span lang=\"ja\">カスタマイザー属性です。</span><span lang=\"en\">Customizer attributes.</span></dd>   <dt class=\"term__item\">PAGE_FEED_ASSET_SET</dt>   <dd class=\"term__desc\"><span lang=\"ja\">ページフィードアセットセットです。</span><span lang=\"en\">PageFeedAssetSet.</span></dd>   <dt class=\"term__item\">PAGE_FEED_ASSET</dt>   <dd class=\"term__desc\"><span lang=\"ja\">ページフィードアセットです。</span><span lang=\"en\">PageFeedAsset.</span></dd>   <dt class=\"term__item\">ALL</dt>   <dd class=\"term__desc\"><span lang=\"ja\">すべての履歴です。</span><span lang=\"en\">All operation history.</span></dd>   <dt class=\"term__item\">UNKNOWN</dt>   <dd class=\"term__desc\"><span lang=\"ja\">未知の値です。</span><span lang=\"en\">Unknown Value</span></dd> </dl>
     *
     * @return self
     */
    public function setEntityType($entity_type)
    {

        if (is_null($entity_type)) {
            array_push($this->openAPINullablesSetToNull, 'entity_type');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('entity_type', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }

        $this->container['entity_type'] = $entity_type;

        return $this;
    }

    /**
     * Gets event_types
     *
     * @return \OpenAPI\Client\Model\AuditLogServiceEventTypes[]|null
     */
    public function getEventTypes()
    {
        return $this->container['event_types'];
    }

    /**
     * Sets event_types
     *
     * @param \OpenAPI\Client\Model\AuditLogServiceEventTypes[]|null $event_types event_types
     *
     * @return self
     */
    public function setEventTypes($event_types)
    {

        if (is_null($event_types)) {
            array_push($this->openAPINullablesSetToNull, 'event_types');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('event_types', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }

        $this->container['event_types'] = $event_types;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset): bool
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed|null
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return $this->container[$offset] ?? null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int|null $offset Offset
     * @param mixed    $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value): void
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset): void
    {
        unset($this->container[$offset]);
    }

    /**
     * Serializes the object to a value that can be serialized natively by json_encode().
     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
     *
     * @return mixed Returns data which can be serialized by json_encode(), which is a value
     * of any type other than a resource.
     */
    #[\ReturnTypeWillChange]
    public function jsonSerialize()
    {
       return ObjectSerializer::sanitizeForSerialization($this);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


