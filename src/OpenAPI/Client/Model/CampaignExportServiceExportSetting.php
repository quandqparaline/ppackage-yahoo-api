<?php
/**
 * CampaignExportServiceExportSetting
 *
 * PHP version 7.4
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Yahoo!広告 検索広告 API リファレンス / Yahoo! JAPAN Ads Search Ads API Reference
 *
 * <div lang=\"ja\">Yahoo!広告 検索広告 APIのWebサービスについて説明します。</div> <div lang=\"en\">Search Ads API Web Services supported in Yahoo! JAPAN Ads API.</div> <div><a target=\"_blank\" href=\"https://github.com/yahoojp-marketing/ads-search-api-documents/blob/master/design/v9/Route.yaml\">OpenAPI Specification</a></div> <div lang=\"ja\"><a target=\"_blank\" href=\"https://github.com/yahoojp-marketing/ads-search-api-documents/blob/master/bestpractice/ja\">Best Practice</a></div> <div lang=\"en\"><a target=\"_blank\" href=\"https://github.com/yahoojp-marketing/ads-search-api-documents/blob/master/bestpractice/en\">Best Practice</a></div>
 *
 * The version of the OpenAPI document: v9
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 6.2.1
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace OpenAPI\Client\Model;

use \ArrayAccess;
use \OpenAPI\Client\ObjectSerializer;

/**
 * CampaignExportServiceExportSetting Class Doc Comment
 *
 * @category Class
 * @description &lt;div lang&#x3D;\&quot;ja\&quot;&gt;CampaignExportServiceExportSetting オブジェクトは、エクスポートする条件を表します。&lt;/div&gt; &lt;div lang&#x3D;\&quot;en\&quot;&gt;CampaignExportServiceExportSetting object describes the condition for exports.&lt;/div&gt;
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 * @implements \ArrayAccess<string, mixed>
 */
class CampaignExportServiceExportSetting implements ModelInterface, ArrayAccess, \JsonSerializable
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'CampaignExportServiceExportSetting';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'account_id' => 'int',
        'ad_group_ad_approval_statuses' => '\OpenAPI\Client\Model\CampaignExportServiceApprovalStatus[]',
        'ad_group_ad_user_statuses' => '\OpenAPI\Client\Model\CampaignExportServiceUserStatus[]',
        'ad_group_criterion_approval_statuses' => '\OpenAPI\Client\Model\CampaignExportServiceApprovalStatus[]',
        'ad_group_criterion_ids' => 'int[]',
        'ad_group_criterion_user_statuses' => '\OpenAPI\Client\Model\CampaignExportServiceUserStatus[]',
        'ad_group_ids' => 'int[]',
        'ad_group_user_statuses' => '\OpenAPI\Client\Model\CampaignExportServiceUserStatus[]',
        'ad_ids' => 'int[]',
        'campaign_criterion_ids' => 'int[]',
        'campaign_ids' => 'int[]',
        'campaign_user_statuses' => '\OpenAPI\Client\Model\CampaignExportServiceUserStatus[]',
        'encoding' => '\OpenAPI\Client\Model\CampaignExportServiceEncoding',
        'entity_types' => '\OpenAPI\Client\Model\CampaignExportServiceEntityType[]',
        'export_fields' => 'string[]',
        'job_name' => 'string',
        'lang' => '\OpenAPI\Client\Model\CampaignExportServiceLang',
        'output' => '\OpenAPI\Client\Model\CampaignExportServiceOutput'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static $openAPIFormats = [
        'account_id' => 'int64',
        'ad_group_ad_approval_statuses' => null,
        'ad_group_ad_user_statuses' => null,
        'ad_group_criterion_approval_statuses' => null,
        'ad_group_criterion_ids' => 'int64',
        'ad_group_criterion_user_statuses' => null,
        'ad_group_ids' => 'int64',
        'ad_group_user_statuses' => null,
        'ad_ids' => 'int64',
        'campaign_criterion_ids' => 'int64',
        'campaign_ids' => 'int64',
        'campaign_user_statuses' => null,
        'encoding' => null,
        'entity_types' => null,
        'export_fields' => null,
        'job_name' => null,
        'lang' => null,
        'output' => null
    ];

    /**
      * Array of nullable properties. Used for (de)serialization
      *
      * @var boolean[]
      */
    protected static array $openAPINullables = [
        'account_id' => false,
		'ad_group_ad_approval_statuses' => true,
		'ad_group_ad_user_statuses' => true,
		'ad_group_criterion_approval_statuses' => true,
		'ad_group_criterion_ids' => true,
		'ad_group_criterion_user_statuses' => true,
		'ad_group_ids' => true,
		'ad_group_user_statuses' => true,
		'ad_ids' => true,
		'campaign_criterion_ids' => true,
		'campaign_ids' => true,
		'campaign_user_statuses' => true,
		'encoding' => true,
		'entity_types' => true,
		'export_fields' => true,
		'job_name' => true,
		'lang' => true,
		'output' => true
    ];

    /**
      * If a nullable field gets set to null, insert it here
      *
      * @var boolean[]
      */
    protected array $openAPINullablesSetToNull = [];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of nullable properties
     *
     * @return array
     */
    protected static function openAPINullables(): array
    {
        return self::$openAPINullables;
    }

    /**
     * Array of nullable field names deliberately set to null
     *
     * @return boolean[]
     */
    private function getOpenAPINullablesSetToNull(): array
    {
        return $this->openAPINullablesSetToNull;
    }

    /**
     * Setter - Array of nullable field names deliberately set to null
     *
     * @param boolean[] $openAPINullablesSetToNull
     */
    private function setOpenAPINullablesSetToNull(array $openAPINullablesSetToNull): void
    {
        $this->openAPINullablesSetToNull = $openAPINullablesSetToNull;
    }

    /**
     * Checks if a property is nullable
     *
     * @param string $property
     * @return bool
     */
    public static function isNullable(string $property): bool
    {
        return self::openAPINullables()[$property] ?? false;
    }

    /**
     * Checks if a nullable property is set to null.
     *
     * @param string $property
     * @return bool
     */
    public function isNullableSetToNull(string $property): bool
    {
        return in_array($property, $this->getOpenAPINullablesSetToNull(), true);
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'account_id' => 'accountId',
        'ad_group_ad_approval_statuses' => 'adGroupAdApprovalStatuses',
        'ad_group_ad_user_statuses' => 'adGroupAdUserStatuses',
        'ad_group_criterion_approval_statuses' => 'adGroupCriterionApprovalStatuses',
        'ad_group_criterion_ids' => 'adGroupCriterionIds',
        'ad_group_criterion_user_statuses' => 'adGroupCriterionUserStatuses',
        'ad_group_ids' => 'adGroupIds',
        'ad_group_user_statuses' => 'adGroupUserStatuses',
        'ad_ids' => 'adIds',
        'campaign_criterion_ids' => 'campaignCriterionIds',
        'campaign_ids' => 'campaignIds',
        'campaign_user_statuses' => 'campaignUserStatuses',
        'encoding' => 'encoding',
        'entity_types' => 'entityTypes',
        'export_fields' => 'exportFields',
        'job_name' => 'jobName',
        'lang' => 'lang',
        'output' => 'output'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'account_id' => 'setAccountId',
        'ad_group_ad_approval_statuses' => 'setAdGroupAdApprovalStatuses',
        'ad_group_ad_user_statuses' => 'setAdGroupAdUserStatuses',
        'ad_group_criterion_approval_statuses' => 'setAdGroupCriterionApprovalStatuses',
        'ad_group_criterion_ids' => 'setAdGroupCriterionIds',
        'ad_group_criterion_user_statuses' => 'setAdGroupCriterionUserStatuses',
        'ad_group_ids' => 'setAdGroupIds',
        'ad_group_user_statuses' => 'setAdGroupUserStatuses',
        'ad_ids' => 'setAdIds',
        'campaign_criterion_ids' => 'setCampaignCriterionIds',
        'campaign_ids' => 'setCampaignIds',
        'campaign_user_statuses' => 'setCampaignUserStatuses',
        'encoding' => 'setEncoding',
        'entity_types' => 'setEntityTypes',
        'export_fields' => 'setExportFields',
        'job_name' => 'setJobName',
        'lang' => 'setLang',
        'output' => 'setOutput'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'account_id' => 'getAccountId',
        'ad_group_ad_approval_statuses' => 'getAdGroupAdApprovalStatuses',
        'ad_group_ad_user_statuses' => 'getAdGroupAdUserStatuses',
        'ad_group_criterion_approval_statuses' => 'getAdGroupCriterionApprovalStatuses',
        'ad_group_criterion_ids' => 'getAdGroupCriterionIds',
        'ad_group_criterion_user_statuses' => 'getAdGroupCriterionUserStatuses',
        'ad_group_ids' => 'getAdGroupIds',
        'ad_group_user_statuses' => 'getAdGroupUserStatuses',
        'ad_ids' => 'getAdIds',
        'campaign_criterion_ids' => 'getCampaignCriterionIds',
        'campaign_ids' => 'getCampaignIds',
        'campaign_user_statuses' => 'getCampaignUserStatuses',
        'encoding' => 'getEncoding',
        'entity_types' => 'getEntityTypes',
        'export_fields' => 'getExportFields',
        'job_name' => 'getJobName',
        'lang' => 'getLang',
        'output' => 'getOutput'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }


    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->setIfExists('account_id', $data ?? [], null);
        $this->setIfExists('ad_group_ad_approval_statuses', $data ?? [], null);
        $this->setIfExists('ad_group_ad_user_statuses', $data ?? [], null);
        $this->setIfExists('ad_group_criterion_approval_statuses', $data ?? [], null);
        $this->setIfExists('ad_group_criterion_ids', $data ?? [], null);
        $this->setIfExists('ad_group_criterion_user_statuses', $data ?? [], null);
        $this->setIfExists('ad_group_ids', $data ?? [], null);
        $this->setIfExists('ad_group_user_statuses', $data ?? [], null);
        $this->setIfExists('ad_ids', $data ?? [], null);
        $this->setIfExists('campaign_criterion_ids', $data ?? [], null);
        $this->setIfExists('campaign_ids', $data ?? [], null);
        $this->setIfExists('campaign_user_statuses', $data ?? [], null);
        $this->setIfExists('encoding', $data ?? [], null);
        $this->setIfExists('entity_types', $data ?? [], null);
        $this->setIfExists('export_fields', $data ?? [], null);
        $this->setIfExists('job_name', $data ?? [], null);
        $this->setIfExists('lang', $data ?? [], null);
        $this->setIfExists('output', $data ?? [], null);
    }

    /**
    * Sets $this->container[$variableName] to the given data or to the given default Value; if $variableName
    * is nullable and its value is set to null in the $fields array, then mark it as "set to null" in the
    * $this->openAPINullablesSetToNull array
    *
    * @param string $variableName
    * @param array  $fields
    * @param mixed  $defaultValue
    */
    private function setIfExists(string $variableName, array $fields, $defaultValue): void
    {
        if (self::isNullable($variableName) && array_key_exists($variableName, $fields) && is_null($fields[$variableName])) {
            $this->openAPINullablesSetToNull[] = $variableName;
        }

        $this->container[$variableName] = $fields[$variableName] ?? $defaultValue;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        if ($this->container['account_id'] === null) {
            $invalidProperties[] = "'account_id' can't be null";
        }
        if (!is_null($this->container['ad_group_ad_approval_statuses']) && (count($this->container['ad_group_ad_approval_statuses']) > 5)) {
            $invalidProperties[] = "invalid value for 'ad_group_ad_approval_statuses', number of items must be less than or equal to 5.";
        }

        if (!is_null($this->container['ad_group_ad_user_statuses']) && (count($this->container['ad_group_ad_user_statuses']) > 2)) {
            $invalidProperties[] = "invalid value for 'ad_group_ad_user_statuses', number of items must be less than or equal to 2.";
        }

        if (!is_null($this->container['ad_group_criterion_approval_statuses']) && (count($this->container['ad_group_criterion_approval_statuses']) > 5)) {
            $invalidProperties[] = "invalid value for 'ad_group_criterion_approval_statuses', number of items must be less than or equal to 5.";
        }

        if (!is_null($this->container['ad_group_criterion_ids']) && (count($this->container['ad_group_criterion_ids']) > 500)) {
            $invalidProperties[] = "invalid value for 'ad_group_criterion_ids', number of items must be less than or equal to 500.";
        }

        if (!is_null($this->container['ad_group_criterion_user_statuses']) && (count($this->container['ad_group_criterion_user_statuses']) > 2)) {
            $invalidProperties[] = "invalid value for 'ad_group_criterion_user_statuses', number of items must be less than or equal to 2.";
        }

        if (!is_null($this->container['ad_group_ids']) && (count($this->container['ad_group_ids']) > 500)) {
            $invalidProperties[] = "invalid value for 'ad_group_ids', number of items must be less than or equal to 500.";
        }

        if (!is_null($this->container['ad_group_user_statuses']) && (count($this->container['ad_group_user_statuses']) > 2)) {
            $invalidProperties[] = "invalid value for 'ad_group_user_statuses', number of items must be less than or equal to 2.";
        }

        if (!is_null($this->container['ad_ids']) && (count($this->container['ad_ids']) > 500)) {
            $invalidProperties[] = "invalid value for 'ad_ids', number of items must be less than or equal to 500.";
        }

        if (!is_null($this->container['campaign_criterion_ids']) && (count($this->container['campaign_criterion_ids']) > 500)) {
            $invalidProperties[] = "invalid value for 'campaign_criterion_ids', number of items must be less than or equal to 500.";
        }

        if (!is_null($this->container['campaign_ids']) && (count($this->container['campaign_ids']) > 500)) {
            $invalidProperties[] = "invalid value for 'campaign_ids', number of items must be less than or equal to 500.";
        }

        if (!is_null($this->container['campaign_user_statuses']) && (count($this->container['campaign_user_statuses']) > 2)) {
            $invalidProperties[] = "invalid value for 'campaign_user_statuses', number of items must be less than or equal to 2.";
        }

        if (!is_null($this->container['entity_types']) && (count($this->container['entity_types']) > 6)) {
            $invalidProperties[] = "invalid value for 'entity_types', number of items must be less than or equal to 6.";
        }

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets account_id
     *
     * @return int
     */
    public function getAccountId()
    {
        return $this->container['account_id'];
    }

    /**
     * Sets account_id
     *
     * @param int $account_id <div lang=\"ja\">アカウントIDです。<br>このフィールドは、必須です。</div> <div lang=\"en\">Account ID.<br>This field is required.</div>
     *
     * @return self
     */
    public function setAccountId($account_id)
    {

        if (is_null($account_id)) {
            throw new \InvalidArgumentException('non-nullable account_id cannot be null');
        }

        $this->container['account_id'] = $account_id;

        return $this;
    }

    /**
     * Gets ad_group_ad_approval_statuses
     *
     * @return \OpenAPI\Client\Model\CampaignExportServiceApprovalStatus[]|null
     */
    public function getAdGroupAdApprovalStatuses()
    {
        return $this->container['ad_group_ad_approval_statuses'];
    }

    /**
     * Sets ad_group_ad_approval_statuses
     *
     * @param \OpenAPI\Client\Model\CampaignExportServiceApprovalStatus[]|null $ad_group_ad_approval_statuses ad_group_ad_approval_statuses
     *
     * @return self
     */
    public function setAdGroupAdApprovalStatuses($ad_group_ad_approval_statuses)
    {

        if (!is_null($ad_group_ad_approval_statuses) && (count($ad_group_ad_approval_statuses) > 5)) {
            throw new \InvalidArgumentException('invalid value for $ad_group_ad_approval_statuses when calling CampaignExportServiceExportSetting., number of items must be less than or equal to 5.');
        }

        if (is_null($ad_group_ad_approval_statuses)) {
            array_push($this->openAPINullablesSetToNull, 'ad_group_ad_approval_statuses');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('ad_group_ad_approval_statuses', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }

        $this->container['ad_group_ad_approval_statuses'] = $ad_group_ad_approval_statuses;

        return $this;
    }

    /**
     * Gets ad_group_ad_user_statuses
     *
     * @return \OpenAPI\Client\Model\CampaignExportServiceUserStatus[]|null
     */
    public function getAdGroupAdUserStatuses()
    {
        return $this->container['ad_group_ad_user_statuses'];
    }

    /**
     * Sets ad_group_ad_user_statuses
     *
     * @param \OpenAPI\Client\Model\CampaignExportServiceUserStatus[]|null $ad_group_ad_user_statuses ad_group_ad_user_statuses
     *
     * @return self
     */
    public function setAdGroupAdUserStatuses($ad_group_ad_user_statuses)
    {

        if (!is_null($ad_group_ad_user_statuses) && (count($ad_group_ad_user_statuses) > 2)) {
            throw new \InvalidArgumentException('invalid value for $ad_group_ad_user_statuses when calling CampaignExportServiceExportSetting., number of items must be less than or equal to 2.');
        }

        if (is_null($ad_group_ad_user_statuses)) {
            array_push($this->openAPINullablesSetToNull, 'ad_group_ad_user_statuses');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('ad_group_ad_user_statuses', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }

        $this->container['ad_group_ad_user_statuses'] = $ad_group_ad_user_statuses;

        return $this;
    }

    /**
     * Gets ad_group_criterion_approval_statuses
     *
     * @return \OpenAPI\Client\Model\CampaignExportServiceApprovalStatus[]|null
     */
    public function getAdGroupCriterionApprovalStatuses()
    {
        return $this->container['ad_group_criterion_approval_statuses'];
    }

    /**
     * Sets ad_group_criterion_approval_statuses
     *
     * @param \OpenAPI\Client\Model\CampaignExportServiceApprovalStatus[]|null $ad_group_criterion_approval_statuses ad_group_criterion_approval_statuses
     *
     * @return self
     */
    public function setAdGroupCriterionApprovalStatuses($ad_group_criterion_approval_statuses)
    {

        if (!is_null($ad_group_criterion_approval_statuses) && (count($ad_group_criterion_approval_statuses) > 5)) {
            throw new \InvalidArgumentException('invalid value for $ad_group_criterion_approval_statuses when calling CampaignExportServiceExportSetting., number of items must be less than or equal to 5.');
        }

        if (is_null($ad_group_criterion_approval_statuses)) {
            array_push($this->openAPINullablesSetToNull, 'ad_group_criterion_approval_statuses');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('ad_group_criterion_approval_statuses', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }

        $this->container['ad_group_criterion_approval_statuses'] = $ad_group_criterion_approval_statuses;

        return $this;
    }

    /**
     * Gets ad_group_criterion_ids
     *
     * @return int[]|null
     */
    public function getAdGroupCriterionIds()
    {
        return $this->container['ad_group_criterion_ids'];
    }

    /**
     * Sets ad_group_criterion_ids
     *
     * @param int[]|null $ad_group_criterion_ids <div lang=\"ja\">広告グループクライテリアIDです。<br>このフィールドは、省略可能となります。</div> <div lang=\"en\">Ad group criteria ID.<br>This field is optional.</div>
     *
     * @return self
     */
    public function setAdGroupCriterionIds($ad_group_criterion_ids)
    {

        if (!is_null($ad_group_criterion_ids) && (count($ad_group_criterion_ids) > 500)) {
            throw new \InvalidArgumentException('invalid value for $ad_group_criterion_ids when calling CampaignExportServiceExportSetting., number of items must be less than or equal to 500.');
        }

        if (is_null($ad_group_criterion_ids)) {
            array_push($this->openAPINullablesSetToNull, 'ad_group_criterion_ids');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('ad_group_criterion_ids', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }

        $this->container['ad_group_criterion_ids'] = $ad_group_criterion_ids;

        return $this;
    }

    /**
     * Gets ad_group_criterion_user_statuses
     *
     * @return \OpenAPI\Client\Model\CampaignExportServiceUserStatus[]|null
     */
    public function getAdGroupCriterionUserStatuses()
    {
        return $this->container['ad_group_criterion_user_statuses'];
    }

    /**
     * Sets ad_group_criterion_user_statuses
     *
     * @param \OpenAPI\Client\Model\CampaignExportServiceUserStatus[]|null $ad_group_criterion_user_statuses ad_group_criterion_user_statuses
     *
     * @return self
     */
    public function setAdGroupCriterionUserStatuses($ad_group_criterion_user_statuses)
    {

        if (!is_null($ad_group_criterion_user_statuses) && (count($ad_group_criterion_user_statuses) > 2)) {
            throw new \InvalidArgumentException('invalid value for $ad_group_criterion_user_statuses when calling CampaignExportServiceExportSetting., number of items must be less than or equal to 2.');
        }

        if (is_null($ad_group_criterion_user_statuses)) {
            array_push($this->openAPINullablesSetToNull, 'ad_group_criterion_user_statuses');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('ad_group_criterion_user_statuses', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }

        $this->container['ad_group_criterion_user_statuses'] = $ad_group_criterion_user_statuses;

        return $this;
    }

    /**
     * Gets ad_group_ids
     *
     * @return int[]|null
     */
    public function getAdGroupIds()
    {
        return $this->container['ad_group_ids'];
    }

    /**
     * Sets ad_group_ids
     *
     * @param int[]|null $ad_group_ids <div lang=\"ja\">ダウンロード対象の広告グループIDです。<br> このフィールドは、省略可能となります。</div> <div lang=\"en\">Ad group ID of export objective.<br> This field is optional.</div>
     *
     * @return self
     */
    public function setAdGroupIds($ad_group_ids)
    {

        if (!is_null($ad_group_ids) && (count($ad_group_ids) > 500)) {
            throw new \InvalidArgumentException('invalid value for $ad_group_ids when calling CampaignExportServiceExportSetting., number of items must be less than or equal to 500.');
        }

        if (is_null($ad_group_ids)) {
            array_push($this->openAPINullablesSetToNull, 'ad_group_ids');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('ad_group_ids', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }

        $this->container['ad_group_ids'] = $ad_group_ids;

        return $this;
    }

    /**
     * Gets ad_group_user_statuses
     *
     * @return \OpenAPI\Client\Model\CampaignExportServiceUserStatus[]|null
     */
    public function getAdGroupUserStatuses()
    {
        return $this->container['ad_group_user_statuses'];
    }

    /**
     * Sets ad_group_user_statuses
     *
     * @param \OpenAPI\Client\Model\CampaignExportServiceUserStatus[]|null $ad_group_user_statuses ad_group_user_statuses
     *
     * @return self
     */
    public function setAdGroupUserStatuses($ad_group_user_statuses)
    {

        if (!is_null($ad_group_user_statuses) && (count($ad_group_user_statuses) > 2)) {
            throw new \InvalidArgumentException('invalid value for $ad_group_user_statuses when calling CampaignExportServiceExportSetting., number of items must be less than or equal to 2.');
        }

        if (is_null($ad_group_user_statuses)) {
            array_push($this->openAPINullablesSetToNull, 'ad_group_user_statuses');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('ad_group_user_statuses', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }

        $this->container['ad_group_user_statuses'] = $ad_group_user_statuses;

        return $this;
    }

    /**
     * Gets ad_ids
     *
     * @return int[]|null
     */
    public function getAdIds()
    {
        return $this->container['ad_ids'];
    }

    /**
     * Sets ad_ids
     *
     * @param int[]|null $ad_ids <div lang=\"ja\">ダウンロード対象の広告IDです。<br> このフィールドは、省略可能となります。</div> <div lang=\"en\">Ad ID of export objective.<br> This field is optional.</div>
     *
     * @return self
     */
    public function setAdIds($ad_ids)
    {

        if (!is_null($ad_ids) && (count($ad_ids) > 500)) {
            throw new \InvalidArgumentException('invalid value for $ad_ids when calling CampaignExportServiceExportSetting., number of items must be less than or equal to 500.');
        }

        if (is_null($ad_ids)) {
            array_push($this->openAPINullablesSetToNull, 'ad_ids');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('ad_ids', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }

        $this->container['ad_ids'] = $ad_ids;

        return $this;
    }

    /**
     * Gets campaign_criterion_ids
     *
     * @return int[]|null
     */
    public function getCampaignCriterionIds()
    {
        return $this->container['campaign_criterion_ids'];
    }

    /**
     * Sets campaign_criterion_ids
     *
     * @param int[]|null $campaign_criterion_ids <div lang=\"ja\">キャンペーンクライテリアIDです。<br> このフィールドは、省略可能となります。</div> <div lang=\"en\">Campaign criteria ID.<br> This field is optional.</div>
     *
     * @return self
     */
    public function setCampaignCriterionIds($campaign_criterion_ids)
    {

        if (!is_null($campaign_criterion_ids) && (count($campaign_criterion_ids) > 500)) {
            throw new \InvalidArgumentException('invalid value for $campaign_criterion_ids when calling CampaignExportServiceExportSetting., number of items must be less than or equal to 500.');
        }

        if (is_null($campaign_criterion_ids)) {
            array_push($this->openAPINullablesSetToNull, 'campaign_criterion_ids');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('campaign_criterion_ids', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }

        $this->container['campaign_criterion_ids'] = $campaign_criterion_ids;

        return $this;
    }

    /**
     * Gets campaign_ids
     *
     * @return int[]|null
     */
    public function getCampaignIds()
    {
        return $this->container['campaign_ids'];
    }

    /**
     * Sets campaign_ids
     *
     * @param int[]|null $campaign_ids <div lang=\"ja\">ダウンロード対象のキャンペーンIDです。<br> このフィールドは、省略可能となります。</div> <div lang=\"en\">Campaign ID of export objective.<br> This field is optional.</div>
     *
     * @return self
     */
    public function setCampaignIds($campaign_ids)
    {

        if (!is_null($campaign_ids) && (count($campaign_ids) > 500)) {
            throw new \InvalidArgumentException('invalid value for $campaign_ids when calling CampaignExportServiceExportSetting., number of items must be less than or equal to 500.');
        }

        if (is_null($campaign_ids)) {
            array_push($this->openAPINullablesSetToNull, 'campaign_ids');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('campaign_ids', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }

        $this->container['campaign_ids'] = $campaign_ids;

        return $this;
    }

    /**
     * Gets campaign_user_statuses
     *
     * @return \OpenAPI\Client\Model\CampaignExportServiceUserStatus[]|null
     */
    public function getCampaignUserStatuses()
    {
        return $this->container['campaign_user_statuses'];
    }

    /**
     * Sets campaign_user_statuses
     *
     * @param \OpenAPI\Client\Model\CampaignExportServiceUserStatus[]|null $campaign_user_statuses campaign_user_statuses
     *
     * @return self
     */
    public function setCampaignUserStatuses($campaign_user_statuses)
    {

        if (!is_null($campaign_user_statuses) && (count($campaign_user_statuses) > 2)) {
            throw new \InvalidArgumentException('invalid value for $campaign_user_statuses when calling CampaignExportServiceExportSetting., number of items must be less than or equal to 2.');
        }

        if (is_null($campaign_user_statuses)) {
            array_push($this->openAPINullablesSetToNull, 'campaign_user_statuses');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('campaign_user_statuses', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }

        $this->container['campaign_user_statuses'] = $campaign_user_statuses;

        return $this;
    }

    /**
     * Gets encoding
     *
     * @return \OpenAPI\Client\Model\CampaignExportServiceEncoding|null
     */
    public function getEncoding()
    {
        return $this->container['encoding'];
    }

    /**
     * Sets encoding
     *
     * @param \OpenAPI\Client\Model\CampaignExportServiceEncoding|null $encoding encoding
     *
     * @return self
     */
    public function setEncoding($encoding)
    {

        if (is_null($encoding)) {
            array_push($this->openAPINullablesSetToNull, 'encoding');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('encoding', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }

        $this->container['encoding'] = $encoding;

        return $this;
    }

    /**
     * Gets entity_types
     *
     * @return \OpenAPI\Client\Model\CampaignExportServiceEntityType[]|null
     */
    public function getEntityTypes()
    {
        return $this->container['entity_types'];
    }

    /**
     * Sets entity_types
     *
     * @param \OpenAPI\Client\Model\CampaignExportServiceEntityType[]|null $entity_types entity_types
     *
     * @return self
     */
    public function setEntityTypes($entity_types)
    {

        if (!is_null($entity_types) && (count($entity_types) > 6)) {
            throw new \InvalidArgumentException('invalid value for $entity_types when calling CampaignExportServiceExportSetting., number of items must be less than or equal to 6.');
        }

        if (is_null($entity_types)) {
            array_push($this->openAPINullablesSetToNull, 'entity_types');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('entity_types', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }

        $this->container['entity_types'] = $entity_types;

        return $this;
    }

    /**
     * Gets export_fields
     *
     * @return string[]|null
     */
    public function getExportFields()
    {
        return $this->container['export_fields'];
    }

    /**
     * Sets export_fields
     *
     * @param string[]|null $export_fields <div lang=\"ja\">エクスポートするフィールドを指定します。<br> このフィールドは、省略可能となります。</div> <div lang=\"en\">Select which field to export.<br> This field is optional.</div>
     *
     * @return self
     */
    public function setExportFields($export_fields)
    {

        if (is_null($export_fields)) {
            array_push($this->openAPINullablesSetToNull, 'export_fields');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('export_fields', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }

        $this->container['export_fields'] = $export_fields;

        return $this;
    }

    /**
     * Gets job_name
     *
     * @return string|null
     */
    public function getJobName()
    {
        return $this->container['job_name'];
    }

    /**
     * Sets job_name
     *
     * @param string|null $job_name <div lang=\"ja\">ダウンロードするジョブの名称です。<br> このフィールドは、省略可能となります。</div> <div lang=\"en\">Job information for export.<br> This field is optional.</div>
     *
     * @return self
     */
    public function setJobName($job_name)
    {

        if (is_null($job_name)) {
            array_push($this->openAPINullablesSetToNull, 'job_name');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('job_name', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }

        $this->container['job_name'] = $job_name;

        return $this;
    }

    /**
     * Gets lang
     *
     * @return \OpenAPI\Client\Model\CampaignExportServiceLang|null
     */
    public function getLang()
    {
        return $this->container['lang'];
    }

    /**
     * Sets lang
     *
     * @param \OpenAPI\Client\Model\CampaignExportServiceLang|null $lang lang
     *
     * @return self
     */
    public function setLang($lang)
    {

        if (is_null($lang)) {
            array_push($this->openAPINullablesSetToNull, 'lang');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('lang', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }

        $this->container['lang'] = $lang;

        return $this;
    }

    /**
     * Gets output
     *
     * @return \OpenAPI\Client\Model\CampaignExportServiceOutput|null
     */
    public function getOutput()
    {
        return $this->container['output'];
    }

    /**
     * Sets output
     *
     * @param \OpenAPI\Client\Model\CampaignExportServiceOutput|null $output output
     *
     * @return self
     */
    public function setOutput($output)
    {

        if (is_null($output)) {
            array_push($this->openAPINullablesSetToNull, 'output');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('output', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }

        $this->container['output'] = $output;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset): bool
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed|null
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return $this->container[$offset] ?? null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int|null $offset Offset
     * @param mixed    $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value): void
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset): void
    {
        unset($this->container[$offset]);
    }

    /**
     * Serializes the object to a value that can be serialized natively by json_encode().
     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
     *
     * @return mixed Returns data which can be serialized by json_encode(), which is a value
     * of any type other than a resource.
     */
    #[\ReturnTypeWillChange]
    public function jsonSerialize()
    {
       return ObjectSerializer::sanitizeForSerialization($this);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


